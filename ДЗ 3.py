# задание 1
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у
# пользователя, предусмотреть обработку ситуации деления на ноль.
def func(a,b):
    if b == 0:
        print("error")
    else:
        return a/b

a = int(input('Введите числитель: '))
b = int(input('Введите знаменатель: '))
print(func(a,b))

# задание 2
#Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия,
# год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.

def user_data(name, surname, year_of_birth, city, adress, phone):
         return print(f'имя: {name},фамилия: {surname},год рождения: {year_of_birth},'
                     f'город проживания: {city}, почтовый адресс: {adress}, телефон:{phone}')
user_data(
    name = input('Имя: '),
    surname = input('Фамилия: '),
    year_of_birth = input('Год Рождения: '),
    city = input('Город проживания: '),
    adress = input('email: '),
    phone = input('phone: '),
)

# задание 3
# Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов
def my_func(x,y,z):
    minelem = min(x,y,z)
    print(f'Сумма наибольших двух аргументов равна { x + y + z - minelem}')

my_func(
x = int(input('Введите первый аргумент')),
y = int(input('Введите второй аргумент')),
z = int(input('Введите третий аргумент'))
)

# задание 4
# Программа принимает действительное положительное число x и целое отрицательное число y.
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.

def my_func3(x, y):
    y = abs(y)
    res = 1 / x ** y
    return res
print(f'{my_func3(float(input("Основание степени x: ")), int(input("Показатель степени отрицательное число y: ")))}')




def my_func2(x, y):
    i = 1
    rate = 1 / x
    while i < abs(y):
        rate = rate * (1 / x)
        i += 1
    return rate
print(f'{my_func2(float(input("Основание степени x: ")), int(input("Показатель степени отрицательное число y: ")))}')

# задание 5
# Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии
# Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет
# добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму
# этих чисел к полученной ранее сумме и после этого завершить программу

def calculate_sum(*datum):
    sum = 0
    flag = False
    for num in datum:
        try:
            if num:
                sum += float(num)
        except ValueError:
            flag = True
    return sum, flag

general_sum = 0

while True:
    datum = input('Введите числа через пробел: ').split()
    sum, stop_flag = calculate_sum(*datum)
    general_sum += sum
    print(f'сумма чисел {general_sum}')

    if stop_flag:
        break

# задание 6,7
# 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и
# возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

# 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых
# пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод
# исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте
# написанную ранее функцию int_func().

def int_func(text):
    return text.title()

result = []
for word in input('Введите строку, слова в которой разделены пробелами: ').split():
    result.append(int_func(word))
print(f'вывод получается следующий: {" ".join(result)}')










